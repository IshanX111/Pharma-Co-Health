@model PharmaCoHealth.ViewModel.PatientLogInViewModel
@{
    ViewBag.Title = "LogIn";
    Layout = "~/Views/Shared/_CustomLayout.cshtml";
    var msg = ViewBag.NoPatient;
}


<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("PharmaCoHealth", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Administrator", "LogIn", "Administrators")</li>
                <li>@Html.ActionLink("Doctor", "LogIn", "Doctors")</li>
                <li>@Html.ActionLink("Patient", "LogIn", "Patients")</li>
            </ul>
            @Html.Partial("_LoginPartial")
        </div>
    </div>
</div>

@using (Html.BeginForm("LogIn", "Patients"))
{


    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Patient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Login" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div>
        <br>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (msg != null)
                {
                    <p class="text-danger">Incorrect Email or Password</p>
                    <p class="text-danger">Try Again !!!</p>
                    @Html.ActionLink("Not Registered ?", "Create")
                }
                else
                {
                    @Html.ActionLink("Not Registered ?", "Create")
                }
            </div>
        </div>
        <br>
    </div>
}

<br><br><br><br><br><br>




